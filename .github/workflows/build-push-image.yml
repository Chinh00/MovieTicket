name: Build and Push Docker Image

on:
  workflow_dispatch:
  push:

jobs:
  main:
    name: Build server for movie

    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Context
        uses: actions/checkout@v4
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push Docker image for admin server
        uses: docker/build-push-action@v5
        with:
          context: .
          file: src/server/Management/MovieTicketManagement.Api/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_API_SERVER_NAME}}:latest
      - name: Build and push Docker image for admin identity server
        uses: docker/build-push-action@v5
        with:
          context: .
          file: src/server/Management/MovieTicketManagement.IdentityServer/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_IDENTITY_SERVER_NAME}}:latest
          
        
      - name: Build and push Docker image for client server
        uses: docker/build-push-action@v5
        with:
          context: .
          file: src/server/Client/MovieTicketClient.Api/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_API_CLIENT_NAME}}:latest
      - name: Build and push Docker image for client identity server
        uses: docker/build-push-action@v5
        with:
          context: .
          file: src/server/Client/MovieTicketClient.IdentityServer/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_IDENTITY_CLIENT_NAME}}:latest
      - name: Build and push Docker image app gateway server
        uses: docker/build-push-action@v5
        with:
          context: .
          file: src/server/Proxy/MovieTicket.AppGateway/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_APPGATEWAY_NAME}}:latest
        
        
  mobile:
    name: Build file apk
    runs-on: ubuntu-latest
    env:
      ANDROID_API_LEVEL: 30
      ANDROID_BUILD_TOOLS_VERSION: 30.0.3
      ANDROID_ABI: x86_64

    steps:
      - uses: actions/checkout@v4
        
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('src/client/mobile/**/*.gradle*', 'src/client/mobile/**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: ${{ env.ANDROID_API_LEVEL }}
          build-tools: ${{ env.ANDROID_BUILD_TOOLS_VERSION }}
          target: ${{ env.ANDROID_ABI }}
      - name: Grant execute permission for gradlew
        run: chmod +x src/client/mobile/gradlew
      - name: Build with Gradle
        run: cd src/client/mobile && ./gradlew assembleDebug
      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: app-debug.apk
          path: src/client/mobile/android/project/app/build/outputs/apk/debug/app-debug.apk